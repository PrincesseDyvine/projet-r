---
title: "jour5_prediction consommation_vehicule"
format: html
editor: visual
---

# Prediction de la consommation des véhicules

```         
```

# collecte des données

```{r}
data("mtcars")
View(mtcars)
```

# Analyse de données

```{r}
summary(mtcars)
# lorsque la moyenne est proche de la median cela veut probablement dire qu'il y'a peu voir peu de valeures abberantes
```

```{r}
#| echo: false # ceci permet de ne pas afficher le code lors du resultat
library(ggplot2)
ggplot(data = mtcars,aes(x="Consommation des véhicules", y = mpg))+
  geom_boxplot(color="blue", fill="blue")
```

## Distribution de la consommation des vehicules

```{r}
library(ggplot2)
ggplot(data = mtcars, aes(x="Consommation des véhicules", y = mpg))+
  geom_boxplot(color="blue", fill="blue")
```

# choix des variables pertinentes

```{r}
mtcars$vs <- as.factor(mtcars$vs)
mtcars$am <- as.factor(mtcars$am)
plot(mtcars)
```

## Matrice de corrélation entre les variables quantitatives

```{r}
base_quanti <- mtcars[,-which(names(mtcars) %in% c("vs","am"))]

cor(base_quanti)

```

```{r}
# Install and load reshape2 package
install.packages("reshape2")
library(reshape2)
 
# creating correlation matrix
corr_mat <- round(cor(base_quanti),2)
 
# reduce the size of correlation matrix
melted_corr_mat <- melt(corr_mat)
head(melted_corr_mat)
 
# plotting the correlation heatmap
library(ggplot2)
ggplot(data = melted_corr_mat, aes(x=Var1, y=Var2, 
                                   fill=value)) + 
geom_tile() +
geom_text(aes(Var2, Var1, label = value), 
          color = "black", size = 2)
```

### Les variables négativement reliées a la consommation sont cly, disp, hp et card

#### on utile le test man - withney pour comparer les variables quali et quanti entre elles, mais par defaut on utilise on commence par faire un tes de student

#### si les hypothese de de student ne sont pas verifiées on fait pratique mainte le man-withney

# Analyse de la liaison entre mpg et am(qualitative deux modalités

## Test paramétrique de student

il est important avant un test statistique de faire un graphique

```{r}
ggplot(data = mtcars, aes(x=am,y=mpg))+
  geom_boxplot(aes(fill=mpg))
```

```{r}
# Réalisation d'un t-test pour comparer les moyennes de 'mpg' entre les voitures à transmission manuelle et automatique
t.test(mpg ~ am, data=mtcars)
```

#### Verification des hypotheses de student

#### la normalité et la variance

```{r}
# Création d'un QQ-plot pour la variable 'mpg'
qqnorm(mtcars$mpg)
qqline(mtcars$mpg, col = "red")
```

```{r}
# Test de Shapiro-Wilk pour 'mpg'
# ce test nous dit si les varaibles sont normalement distribuées
shapiro.test(mtcars$mpg)
```

```{r}
install.packages("car")

library(car)

```

```{r}
# Réalisation du test de Levene sur 'mpg' en fonction du type de transmission 'am'
leveneTest(mpg ~ am, data = mtcars)
```

```{r}
# on le fait lorsque le test de la variance n'est pas respectée
t.test(mpg ~ am, data=mtcars, var.equal = FALSE)
```

```{r}
wilcox.test(mpg ~ am, data=mtcars)
```

#### Construction du modele de regression linéaire

```{r}
model <- lm(mpg ~ ., data = mtcars )
```

```{r}
summary(model)

```

```{r}
residualPlot(model)

```

```{r}
vif(model)
```

```{r}
ggplot(data = melted_corr_mat, aes(x=Var1, y=Var2, 
                                   fill=value)) + 
geom_tile() +
geom_text(aes(Var2, Var1, label = value), 
          color = "black", size = 2)
```

```{r}
mtcars_bis <- mtcars[,-which(names(mtcars) %in% c("cyl","disp"," hp","carb","qsec"))]

model_bis <- lm(mpg ~ ., data = mtcars_bis )
```

```{r}
summary(model_bis)
```

```{r}
vif(model_bis)
```

## Prediction

```{r}
predict(model_bis, data.frame(hp = 10, drat = 5, wt = 10, vs = as.factor(0), am = as.factor(0), gear = 7))
```

# Quarto

Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see <https://quarto.org>.

## Running Code

When you click the **Render** button a document will be generated that includes both content and the output of embedded code. You can embed code like this:

```{r}
1 + 1
```

You can add options to executable code like this

```{r}
#| echo: false
2 * 2
```

The `echo: false` option disables the printing of code (only output is displayed).
